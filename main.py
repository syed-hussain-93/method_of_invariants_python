# This is a sample Python script.

# Press ⌃R to execute it or replace it with your code.
# Press Double ⇧ to search everywhere for classes, files, tool windows, actions, and settings.

from group import GroupRepresentation
import sympy as sp


def create_dihedral_group(n=4):
    """Create the dihedral group D_n."""
    # D_n is generated by a rotation r and a reflection s
    # with relations r^n = s^2 = 1 and sr = r^(n-1)s

    # Create 2D representation
    theta = 2 * sp.pi / n

    # Rotation matrix
    r = sp.Matrix([
        [sp.cos(theta), -sp.sin(theta)],
        [sp.sin(theta), sp.cos(theta)]
    ])

    # Reflection matrix
    s = sp.Matrix([
        [1, 0],
        [0, -1]
    ])

    group = GroupRepresentation(generators=[r, s], dimension=2)
    return group


def print_hi(name):
    # Use a breakpoint in the code line below to debug your script.
    print(f'Hi, {name}')  # Press ⌘F8 to toggle the breakpoint.


# Press the green button in the gutter to run the script.
if __name__ == '__main__':
    # Create a dihedral group D4
    d4 = create_dihedral_group(4)

    # Generate all elements
    elements = d4.generate_elements()

    # Find irreducible representations
    irreps = d4.find_irreducible_representations()
    print(f"Found {len(irreps)} irreducible representations")
    print(f"irreps: {irreps.shape}")

    # Decompose the current representation
    decomposition = d4.decompose_representation()
    print("Decomposition into irreps:", decomposition)

    # Create a new representation as direct sum of specific irreps
    # For example, taking the 1st and 3rd irreps
    new_rep = d4.direct_sum_irreps([0, 2])

# See PyCharm help at https://www.jetbrains.com/help/pycharm/
